# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ....................................................................... Movies

# Library structure:
# ../videos
#        ../movies
#               ../title.YEAR.*  (movie)

library=${LIBRARY:-/net/media/videos/${1:-movies}}

# list latest movie additions first
T=t
cache=/tmp/dmenu:movies
hlwm && monitor=$(herbstclient attr monitors.focus.index)
[ -e "$cache" ] || time=5 notify low 'Movies' 'Caching library..'

# clean up titles
mytitles $library >>/tmp/mytitles:movies
playlist=$library/.playlist
[ -e "$playlist" ] || echo >"$playlist"

shows() {
  ls -1$T $library | sed -re 's/\./ /g' -e 's/(.*) ([12][0-9][0-9][0-9])( .*)*/\1  (\2)/' >"$cache"
  playlist "$cache" "$playlist"
}

library() {
  [ "$1" ] && echo '[ theatrical   ]' || echo '[ animation    ]'
}

options() {
  grep -q '[^ ]' "$playlist" && echo "[ last viewed  ]\\\n[ $(sortlist $T) ]" \
                             || echo "[ $(sortlist $T) ]"
}

while :
do
  # focus monitor menu originally presented on
  [ $monitor ] && herbstclient focus_monitor $monitor
  movie=$(shows \
        | sed "1i$(library $1)" \
        | sed "1i$(options)" \
        | dmenu 'Movie' "$movie" -no-custom) || exit

  [ "$movie" = '[ last viewed  ]' ] && movie=$(grep '[^ ]' "$playlist" | head -1)

  case "$movie" in
    '[ sort by name ]') unset T
                        continue ;;

    '[ sort by date ]') T=t
                        continue ;;

    '[ animation    ]') exec dmenu movies animation ;;
    '[ theatrical   ]') exec dmenu movies ;;

    *) movie=$(echo "$movie" | sed "s/ $SEP$//")
       while :
       do
         action=$(echo 'play\nmrqe\nimdb\nedit\ndelete\nmark' | dmenu "$movie" -no-custom) || break
         video=$(find $library -maxdepth 1 -regex ".*$(echo "$movie" | sed -e 's/  (\([12][0-9][0-9][0-9]\))$/ \1/' -e 's/ /./g').*")
         case $action in
           play) if [ $(echo -n "$video\n" | wc -l) -gt 1 ] ;then
                   notify critical "$movie" "Duplicate movie files found"
                   sleep 3s
                   break
                 fi
                 history "$playlist" "$movie"
                 play "$video"
                 break ;;

           mrqe) vimb "mr $movie" ;;
           imdb) vimb "im $movie" ;;

           edit) term 'movies' WAIT ranger "$video"
                 break ;;

           delete) rm -rf "$video"
                   break ;;

           mark) history "$playlist" "$movie"
                 break ;;
         esac
       done ;;
  esac
done

# vim: set ft=sh: #
