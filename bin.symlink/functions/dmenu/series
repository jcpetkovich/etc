# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ............................................................ Television series

# Library structure:
# ../videos
#        ../series
#               ../show
#                    ../*S01E01*  (episode)

library=${LIBRARY:-/net/media/videos/${1:-series}}

# list latest television series additions first
T=t
episodes=/tmp/dmenu:episodes
hlwm && monitor=$(herbstclient attr monitors.focus.index)

shows() {
  mytitles "$series" >>/tmp/mytitles:series
  ls -1 "$series" | sed -r 's/.*((S[0-9][0-9]E[0-9][0-9])(-*E[0-9][0-9])*).*/\1/' | sort >"$episodes"
  playlist "$episodes" "$playlist"
}

library() {
  [ "$1" ] && echo '[ theatrical   ]' || echo '[ anime        ]'
}

while :
do
  # cleanup show names
  find $library -maxdepth 1 -name '[^ ]*.*' -exec myshow {} \;
  show=$(ls -1$T $library \
       | sed "1i$(library $1)\n[ edit         ]" \
       | sed "1i[ $(sortlist $T) ]" \
       | dmenu 'Show' "$show" -no-custom) || exit

  case "$show" in
    '[ sort by name ]') unset T
                        continue ;;

    '[ sort by date ]') T=t
                        continue ;;

    '[ anime        ]') exec dmenu series anime ;;
    '[ theatrical   ]') exec dmenu series ;;

    '[ edit         ]') pkill -TERM 'ROX-Filer'
                        rox "$library"
                        pwait "ROX-Filer $library"
                        continue ;;

    *) series="$library/$show"
       # clean up titles
       mytitles "$series" >>/tmp/mytitles:series
       playlist="$series/.playlist"
       [ -e "$playlist" ] || echo >"$playlist" ;;
  esac

  while :
  do
    # focus monitor menu originally presented on
    [ $monitor ] && herbstclient focus_monitor $monitor
    # highlight most current episode viewed
    [ $episode ] || episode=$(shows | grep " $SEP$" | tail -1)
    episode=$(shows | dmenu "$show" "$episode" -no-custom) || break
    [ "$episode" ] || break
    episode=$(echo "$episode" | sed "s/ $SEP$//")
    video=$(find "$series" -maxdepth 1 -regex ".*$episode.*")
    if [ $(echo -n "$video\n" | wc -l) -gt 1 ] ;then
      notify critical "$show" "Duplicate episodes found"
      sleep 3s
      break
    fi
    history "$playlist" "$episode"
    play "$video"
  done
done

# vim: set ft=sh: #
