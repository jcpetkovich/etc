# sdothum - 2016 (c) wtfpl

# X11 Dynamic Menu
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ....................................................................... E-mail

# select email contact addresses for insert into sup query
maildir=${MAILDIR:-$HOME/Maildir}
cache=$maildir/addressbook
# additional contacts
# - name <address>
# - tag :: name <address>,..
contacts=$maildir/contacts
patricia=$maildir/addressbook.patricia

# ................................................................... Initialize

# build address list
# - exclude major lists correspondence
# - exclude news and announcement items
# - exclude malformed addresses, unexpected characters
# - addresses must include "user name" prefix
# - proper case "user name"
abook() {
  time=15 notify low 'Updating dmenu addressbook cache' 'Please be patient..'
  /usr/bin/vendor_perl/ack --no-filename --ignore-case --no-color '^(From|To|Cc|Bcc): .*@' $maildir | \
  sed -re 's/(\xad|\x01)/ /g' \
      -e 's/[,;] */\n/g' \
      -e 's/["]//g' \
      -e "s/[']//g" \
      -e 's/<br>//' \
      -e 's/<mailto:[^>]*>//' \
      -e 's/\t/ /g' \
      -e 's/  *$//' \
      -e 's/^  *//' \
      -e 's/  */ /g' \
      -e 's/^To: //I' \
      -e 's/^From: //I' \
      -e 's/^Cc: //I' \
      -e 's/^Bcc: //I' \
      -e 's/< */</' \
      -e 's/ *>/>/' | \
  grep '^[^<].*<.*>$' | \
  grep -v '@.*<' | \
  grep -Eiv '(^[^a-z[]|[#])' | \
  grep -Piv '<comments(?!@thedarnedestthing)' | \
  grep -Eiv '((hello|info)@)' | \
  grep -Eiv '(announce|automated|confirm|contact|help|invitations|market|news|notification|promo|reply|review|subscribe|welcome)' | \
  grep -Eiv '(feedspot|github|via linkedin|yahoogroups)' | \
  sed -re 's/[^< ]*[?][^< ]* //' \
      -e 's/\b(\w*)\b/\L\u\1/g' \
      -e 's/(<.*)/\L\1/g' | \
  sort -f | \
  uniq -i >$cache
  notify low 'Update of dmenu addressbook cache' '..Complete'
}

# command line initialization with: dmenu abook [init]
if ! [ -s $cache ] || [ "$*" ] ;then
  abook
  [ "$*" ] && exit
fi

# ................................................................. Send-to list

ribbon() {
  if [ -z "$addresses" ] ;then
    echo 'E-mail'
  elif echo $addresses | grep -qv ',' ;then
    echo "$addresses"
  else
    echo "... $(echo ${addresses##*,})"
  fi
}

contacts() {
  sed "s/  *::  */^$SEP /" $contacts | column -s^ -t
  cat $patricia $cache
}

addresslist() {
  if [ "$addresses" ] ;then
    contacts | sed '/^ *$/d' \
             | sed '1i[ paste        ]\n[ clipboard    ]\n[ add contacts ]'
  else
    contacts | sed '/^ *$/d' \
             | sed '1i[ rebuild database ]\n[ edit contacts    ]'
  fi
}

# ................................................................. Address book
 
while :
do
  address=$(addresslist | dmenu "$(ribbon)" -no-custom) || exit
  address=${address#*$SEP }

  case "$address" in
    '[ rebuild database ]') abook
                            unset addresses ;;

    '[ edit contacts    ]') gvim -f $contacts ;;

    '[ paste        ]') gpaste-client add "$addresses"
                        xdotool type "$addresses"
                        break ;;

    '[ clipboard    ]') gpaste-client add "$addresses"
                        time=10 notify 'Ctrl-Alt-V' "$(echo $addresses | sed 's/ <\S*>//g')"
                        break ;;

    '[ add contacts ]') if [ "$addresses" ] ;then
                          desc=$(echo | dmenu 'Description') || continue
                          [ $desc ] || desc='Contacts'
                          echo "\n$desc :: $addresses" >>$contacts
                          unset addresses
                          gvim -f $contacts
                        fi ;;

    *) [ "$addresses" ] && addresses=$addresses,$address || addresses=$address ;;
  esac
done

# vim: set ft=sh: #
