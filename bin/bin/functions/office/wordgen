#!/usr/bin/dash
# sdothum - 2016 (c) wtfpl

# Office
# ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂

# ........................................................ Random word generator

usage() {
  echo "usage: [option=..]* $(basename $0) [<sentence word lengths>]*, default"
  echo "       wordgen 8 11 14 17"
  echo "       options: wordlen=<length>,  default '99'"
  echo "                size=<count>,      default '30000'"
  echo "                case=lower,        default 'proper'"
  echo "                corpus=<filename>, default 'practice'"
  exit 1
}

[ "$1" = h ] && usage

typedir=$HOME/.config/Amphetype
[ "$*" ] && sentences="$@" || sentences='8 11 14 17'
[ $wordlen ] || wordlen=99
[ $size ] || size=30000
[ $case ] || case='proper'
[ $corpus ] || corpus='practice'
corpus=$typedir/$corpus

# rebuild corpus if corpus source updated
# natural language corpus data by Peter Norvig at http://norvig.com/ngrams/
paragraphs=$(mktemp)

# ................................................................... Initialize

# rebuild corpus from new wordfile
if [ -e $corpus.words ] ;then
  if-no 'rebuild corpus' || rm -f $corpus.*
fi
# build common word dictionary (ignore majority of 1-2 character word acronyms)
if ! [ -e $corpus.words ] ;then
  notify low "Building $corpus.words" 'Please be patient..'
  sort -nr --key=2 $typedir/100K-word.database \
       | sed -re 's/\t.*//' -e 's/(.*)/\L\1/' \
       | egrep -v '^(.|..)$' \
       | egrep -x ".{1,$wordlen}" \
       >$corpus.words
  # arbitrarily remove all questionable spellingssed -r 's/([ &;(){}])/\\\\\1/g'
  cat $corpus.words \
      | aspell --ignore-case -a \
      | grep -v '^\*$' \
      | grep -v '^$' \
      | awk '{ print $2 }' \
      >$corpus.undefined
  diff $corpus.words $corpus.undefined \
      | grep '^< [a-z]' \
      | sed 's/< //' \
      | head -$size \
      >$corpus.corpus
fi
typefile="$typedir/$(cat $corpus.corpus | wc -l)-${corpus##*/}.txt"

# .................................................................... Sentences

wordcase() {
  if [ "$case" = proper ] ;then
    sed -re 's/^(.)/\U\1/' -e 's/ $/./' -
  else
    cat -
  fi
}

# build sentences
wordgen() {
  shuf $corpus.corpus \
       | tr '\n' ' ' \
       | fold -s --width=$(( $@ * 5 )) \
       | wordcase \
       >>$paragraphs
  echo >>$paragraphs
}

# ................................................................... Paragraphs

for i in $sentences
do
  echo ".. sentence length $i words"
  wordgen $i
done
# add paragraph markers (reduced by subsequent shuf)
sed -i -r 's/(.*)/\1\n/' $paragraphs

shuf $paragraphs >$typefile
rm -f $paragraphs

head $typefile
echo "$typefile" | xsel -i
time=10 notify low 'Amphetype import' "$typefile"
unset word

# vim: set ft=sh: #
